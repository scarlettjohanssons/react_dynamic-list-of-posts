{"version":3,"sources":["components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","api/api.js","api/posts.js","components/PostDetails/PostDetails.jsx","api/comments.js","App.jsx","index.js"],"names":["PostsList","posts","postSelect","selectedPostId","className","map","post","key","id","userId","title","type","onClick","NewCommentForm","onAddComment","useState","newName","setNewName","newEmail","setNewEmail","newComment","setNewComment","onSubmit","event","preventDefault","name","value","onChange","target","placeholder","BASE_URL","request","url","fetch","then","response","json","result","data","PostDetails","selectedPost","setSelectedPost","selectedComments","setSelectedComments","commentsHide","setCommentsHide","fetchPostData","useCallback","a","postsDetails","useEffect","postId","deleteComment","method","list","filter","comment","body","length","email","headers","JSON","stringify","res","App","setPosts","setSelectedPostId","chooseUser","setChooseUser","sortPost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e52165b0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './PostsList.scss';\n\nexport const PostsList = ({ posts, postSelect, selectedPostId }) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n\n    <ul className=\"PostsList__list\">\n\n      {posts.map(post => (\n        <li key={post.id} className=\"PostsList__item\">\n          <div>\n            <b>\n              [User #\n              {post.userId}\n              ]:\n              {' '}\n            </b>\n            {post.title}\n          </div>\n          <button\n            type=\"button\"\n            className={\n              `PostsList__button button \n              ${selectedPostId === post.id && 'PostsList__active'}`\n            }\n            onClick={() => {\n              postSelect(post.id);\n            }}\n          >\n            {selectedPostId === post.id\n              ? 'Close'\n              : 'Open'\n          }\n          </button>\n        </li>\n      ))}\n\n    </ul>\n  </div>\n);\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape().isRequired,\n  ).isRequired,\n  postSelect: PropTypes.func.isRequired,\n  selectedPostId: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ onAddComment }) => {\n  const [newName, setNewName] = useState('');\n  const [newEmail, setNewEmail] = useState('');\n  const [newComment, setNewComment] = useState('');\n\n  const handleSubmit = () => {\n    if (!newName) {\n      return;\n    }\n\n    if (!newEmail) {\n      return;\n    }\n\n    if (!newComment) {\n      return;\n    }\n\n    onAddComment(newName, newEmail, newComment);\n    setNewName('');\n    setNewEmail('');\n    setNewComment('');\n  };\n\n  return (\n    <form\n      onSubmit={(event) => {\n        event.preventDefault();\n        handleSubmit();\n      }}\n      className=\"NewCommentForm\"\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={newName}\n          onChange={(event) => {\n            setNewName(event.target.value);\n          }}\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={newEmail}\n          onChange={(event) => {\n            setNewEmail(event.target.value);\n          }}\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          value={newComment}\n          onChange={(event) => {\n            setNewComment(event.target.value);\n          }}\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  onAddComment: PropTypes.func.isRequired,\n};\n","export const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport function request(url) {\n  return fetch(`${BASE_URL}${url}`)\n    .then(response => response.json())\n    .then(result => result.data);\n}\n\nexport const post = (url, body) => fetch(`${BASE_URL}${url}`, {\n  method: 'POST',\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n  body: JSON.stringify(body),\n});\n\nexport const remove = url => fetch(`${BASE_URL}${url}`, { method: 'DELETE' });\n","import { request } from './api';\n\nexport function getPosts() {\n  return request('/posts');\n}\n\nexport const getUserPosts = userId => request(`/posts?userId=${userId}`);\n\nexport const getPostDetails = postId => request(`/posts/${postId}`);\n","import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments } from '../../api/comments';\nimport './PostDetails.scss';\nimport { post, remove } from '../../api/api';\n\nexport const PostDetails = ({ selectedPostId }) => {\n  const [selectedPost, setSelectedPost] = useState({});\n  const [selectedComments, setSelectedComments] = useState([]);\n  const [commentsHide, setCommentsHide] = useState(false);\n\n  const fetchPostData = useCallback(async() => {\n    const postsDetails = await getPostDetails(selectedPostId);\n\n    setSelectedPost(postsDetails);\n  }, [selectedPostId]);\n\n  useEffect(() => {\n    fetchPostData();\n  }, [fetchPostData]);\n\n  useEffect(() => {\n    getPostComments(selectedPostId)\n      .then(result => setSelectedComments(result));\n  }, [selectedPostId]);\n\n  const addComment = (name, email, body) => {\n    const comment = {\n      name,\n      email,\n      body,\n      postId: selectedPostId,\n    };\n\n    return post('/comments', comment)\n      .then(response => response.json())\n      .then(result => result.data)\n      .then((res) => {\n        setSelectedComments(list => [...list, res]);\n      });\n  };\n\n  const deleteComment = id => remove(`/comments/${id}`)\n    .then(() => {\n      setSelectedComments(list => (\n        list.filter(comment => comment.id !== id)\n      ));\n    });\n\n  return (\n    <div className=\"PostDetails\">\n      {selectedPost && (\n        <>\n\n          <h2>Post details:</h2>\n\n          <section className=\"PostDetails__post\">\n            <p>{selectedPost && selectedPost.body}</p>\n          </section>\n\n          <section className=\"PostDetails__comments\">\n            {selectedComments.length !== 0 && (\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => {\n                setCommentsHide(!commentsHide);\n              }}\n            >\n              {commentsHide\n                ? `Show ${selectedComments.length} comments`\n                : `Hide ${selectedComments.length} comments`\n              }\n            </button>\n            )}\n\n            {commentsHide || (\n            <ul className=\"PostDetails__list\">\n\n              {selectedComments.map(comment => (\n                <li key={comment.id} className=\"PostDetails__list-item\">\n                  <button\n                    type=\"button\"\n                    className=\"PostDetails__remove-button button\"\n                    onClick={() => {\n                      deleteComment(comment.id);\n                    }}\n                  >\n                    X\n                  </button>\n                  <p>{comment.body}</p>\n                </li>\n              ))}\n\n            </ul>\n            )}\n\n          </section>\n\n          <section>\n            <div className=\"PostDetails__form-wrapper\">\n              <NewCommentForm onAddComment={addComment} />\n            </div>\n          </section>\n\n        </>\n      )}\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  selectedPostId: PropTypes.number.isRequired,\n};\n","import { request } from './api';\n\nexport const getPostComments = postId => request(`/comments?postId=${postId}`);\n\nexport const getComments = () => request('/comments');\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getPosts } from './api/posts';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n  const [chooseUser, setChooseUser] = useState('0');\n\n  useEffect(() => {\n    getPosts()\n      .then(result => setPosts(result));\n  }, []);\n\n  const changeUser = (event) => {\n    setChooseUser(event.target.value);\n  };\n\n  const sortPost = posts.filter((post) => {\n    switch (chooseUser) {\n      case '0':\n        return post;\n      default:\n        return post.userId === +chooseUser;\n    }\n  });\n\n  const showDetails = (postId) => {\n    if (postId === selectedPostId) {\n      setSelectedPostId(0);\n    } else {\n      setSelectedPostId(postId);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            value={chooseUser}\n            onChange={changeUser}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={sortPost}\n            selectedPostId={selectedPostId}\n            postSelect={showDetails}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <PostDetails selectedPostId={selectedPostId} />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}